CREATE SCHEMA IF NOT EXISTS `ORDER`;

CREATE TABLE IF NOT EXISTS `ORDER`.`ORDER` (
    ID VARCHAR(36) NOT NULL,
    ORDERER_ID VARCHAR(36) NOT NULL,
    TOTAL_PRICE_NUMBER DOUBLE NOT NULL,
    TOTAL_PRICE_CURRENCY VARCHAR(36) NOT NULL,
    STATUS VARCHAR(255) NOT NULL,
    PLACED_AT TIMESTAMP NOT NULL,
    ACCEPTED_AT TIMESTAMP NULL,
    COMPLETED_AT TIMESTAMP NULL,
    CANCELED_AT TIMESTAMP NULL,        
    VERSION BIGINT NULL,
    PRIMARY KEY (id)
);
CREATE TABLE IF NOT EXISTS `ORDER`.`ORDER_ITEM` (
    ID VARCHAR(36) NOT NULL,
    ORDER_ID VARCHAR(36) NOT NULL,
    PRODUCT_ID VARCHAR(36) NOT NULL,
    PRODUCT_PRICE_NUMBER DOUBLE NOT NULL,
    PRODUCT_PRICE_CURRENCY VARCHAR(36) NOT NULL,
    QUANTITY INT NULL,
    STATUS VARCHAR(255) NOT NULL,
    CONFIRMED_AT TIMESTAMP NULL,
    DELIVERED_AT TIMESTAMP NULL,
    REFUSED_AT TIMESTAMP NULL,
    CANCELED_AT TIMESTAMP NULL,
    VERSION BIGINT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS `ORDER`.`MODULE_EVENT_OUTBOX` (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    EVENT_ID VARCHAR(36) NOT NULL,
    EVENT_TYPE VARCHAR(255) NOT NULL,
    EVENT_SOURCE VARCHAR(255) NOT NULL,   
    EVENT_DATA TEXT NOT NULL,
    EVENT_OCCURRENCE_TIME TIMESTAMP NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (EVENT_ID)    
);

CREATE TABLE IF NOT EXISTS `ORDER`.`MODULE_EVENT_INBOX` (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    EVENT_ID VARCHAR(36) NOT NULL,
    EVENT_TYPE VARCHAR(255) NOT NULL,
    EVENT_SOURCE VARCHAR(255) NOT NULL,   
    EVENT_DATA TEXT NOT NULL,
    EVENT_OCCURRENCE_TIME TIMESTAMP NOT NULL,
    PROCESSED_AT TIMESTAMP NOT NULL,
    PRIMARY KEY (ID),
    UNIQUE (EVENT_ID)
);
